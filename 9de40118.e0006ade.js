(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{102:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return s}));var i=n(2),r=n(6),o=(n(0),n(142)),a={id:"FlowTypes",title:"Flow Types",sidebar_label:"Flow Types"},l={unversionedId:"plugin-development-guidelines/FlowTypes",id:"plugin-development-guidelines/FlowTypes",isDocsHomePage:!1,title:"Flow Types",description:"Flow Types",source:"@site/docs/plugin-development-guidelines/FlowTypes.md",slug:"/plugin-development-guidelines/FlowTypes",permalink:"/rich-content/docs/plugin-development-guidelines/FlowTypes",version:"current",sidebar_label:"Flow Types"},p=[{value:"Motivation",id:"motivation",children:[]},{value:"Infrastructure",id:"infrastructure",children:[]},{value:"Available Types",id:"available-types",children:[{value:"Plugin related types:",id:"plugin-related-types",children:[]},{value:"<code>RichContentEditor</code> configuration related types:",id:"richcontenteditor-configuration-related-types",children:[]}]},{value:"References and examples",id:"references-and-examples",children:[]}],c={rightToc:p};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"flow-types"},"Flow Types"),Object(o.b)("h2",{id:"motivation"},"Motivation"),Object(o.b)("p",null,"In order to make the plugin development easier, some major public API types are defined. The type definitions are implemened with the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://flow.org/"}),"flow")," type system."),Object(o.b)("p",null,"This document describes the ",Object(o.b)("inlineCode",{parentName:"p"},"flow")," types available at the moment, which is subject of changes."),Object(o.b)("h2",{id:"infrastructure"},"Infrastructure"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"flow")," type system is added to the project root (",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.npmjs.com/package/flow-bin"}),"flow-bin")," package). The type definitions are found in the default location (",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/wix-incubator/rich-content/blob/develop/flow-typed"}),Object(o.b)("inlineCode",{parentName:"a"},"/flow-typed"))," directory)."),Object(o.b)("p",null,"In addition, all the CSS modules are typed now. The types are generated automatically by ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.npmjs.com/package/css-modules-flow-types-cli"}),"css-modules-flow-types-cli"),", within ",Object(o.b)("inlineCode",{parentName:"p"},"npm test")," step."),Object(o.b)("p",null,"At the moment, the type definitions are not deployed."),Object(o.b)("h2",{id:"available-types"},"Available Types"),Object(o.b)("h3",{id:"plugin-related-types"},"Plugin related types:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"CreateInlineButtons")," type validates the plugin toolbar button definitions"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"CreateInsertButtons")," type validates the plugin insertion button definitions"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"TextButtonMapper")," type validates the plugin text toolbar button definitions"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"PluginTypeMapper")," type validates the type mapper functions used with ",Object(o.b)("inlineCode",{parentName:"li"},"RichContentViewer"))),Object(o.b)("h3",{id:"richcontenteditor-configuration-related-types"},Object(o.b)("inlineCode",{parentName:"h3"},"RichContentEditor")," configuration related types:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"GetToolbarSettings")," type validates the ",Object(o.b)("inlineCode",{parentName:"li"},"RichContentEditor"),"'s ",Object(o.b)("inlineCode",{parentName:"li"},"config")," prop ",Object(o.b)("inlineCode",{parentName:"li"},"getToolbarSettings")," value (see ",Object(o.b)("a",Object(i.a)({parentName:"li"},{href:"https://github.com/wix-incubator/rich-content/blob/develop/docs/ToolbarCustomization.md"}),"Toolbar Customization")," for details)")),Object(o.b)("h2",{id:"references-and-examples"},"References and examples"),Object(o.b)("p",null,"All the mentioned types are used in existing plugins code. We prefer to use the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://flow.org/en/docs/types/comments/"}),"comment type annotations")," to keep it less intrusive."))}s.isMDXComponent=!0},142:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var i=n(0),r=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),b=s(n),d=i,m=b["".concat(a,".").concat(d)]||b[d]||u[d]||o;return n?r.a.createElement(m,l(l({ref:t},c),{},{components:n})):r.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);