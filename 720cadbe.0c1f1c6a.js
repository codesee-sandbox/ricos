(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{70:function(e,i,n){"use strict";n.r(i),n.d(i,"frontMatter",(function(){return a})),n.d(i,"metadata",(function(){return c})),n.d(i,"rightToc",(function(){return l})),n.d(i,"default",(function(){return p}));var t=n(2),o=n(6),r=(n(0),n(128)),a={id:"migrating-from-rich-content",title:"Migrating from rich-content",sidebar_label:"RichContent -> Ricos"},c={unversionedId:"ricos/migrations/migrating-from-rich-content",id:"ricos/migrations/migrating-from-rich-content",isDocsHomePage:!1,title:"Migrating from rich-content",description:"This section is intended for users of the legacy RichContentEditor & RichContentViewer API.",source:"@site/docs/ricos/migrations/migrating-from-rich-content.md",slug:"/ricos/migrations/migrating-from-rich-content",permalink:"/rich-content/docs/ricos/migrations/migrating-from-rich-content",version:"current",sidebar_label:"RichContent -> Ricos",sidebar:"ricos",previous:{title:"Migrating to Version 7",permalink:"/rich-content/docs/ricos/migrations/v6-to-v7"}},l=[{value:"Motivation",id:"motivation",children:[]},{value:"Getting started",id:"getting-started",children:[{value:"Existing consumers",id:"existing-consumers",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Wrapping the RCV",id:"wrapping-the-rcv",children:[]}]},{value:"Why <code>Ricos</code> is good for you?",id:"why-ricos-is-good-for-you",children:[{value:"Core features",id:"core-features",children:[]}]}],s={rightToc:l};function p(e){var i=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(t.a)({},s,n,{components:i,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This section is intended for users of the legacy RichContentEditor & RichContentViewer API."),Object(r.b)("h2",{id:"motivation"},"Motivation"),Object(r.b)("p",null,"The motivation behind this project is to provide a better user experience for ",Object(r.b)("inlineCode",{parentName:"p"},"rich-content")," consumers."),Object(r.b)("p",null,"The core idea is to wrap the ",Object(r.b)("inlineCode",{parentName:"p"},"RichContentEditor"),"/",Object(r.b)("inlineCode",{parentName:"p"},"RichContentViewer"),' with a "transparent" wrapper which provides convenient default configuration to its child component, while keeping full backward compatibility for existing applications. The three main goals are:'),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"simpler API and configuration"),Object(r.b)("li",{parentName:"ul"},"less breaking changes"),Object(r.b)("li",{parentName:"ul"},"reduced amount of code duplication among the consumers by providing a default implementation")),Object(r.b)("h2",{id:"getting-started"},"Getting started"),Object(r.b)("h3",{id:"existing-consumers"},"Existing consumers"),Object(r.b)("p",null,"Existing consumers can gradually integrate ",Object(r.b)("inlineCode",{parentName:"p"},"Ricos")," into their code. The ",Object(r.b)("inlineCode",{parentName:"p"},"Ricos")," wrapper provides a configuration to its child based on its own props. Any props that are passed directly to the child override the wrapper's ones."),Object(r.b)("h3",{id:"examples"},"Examples"),Object(r.b)("h4",{id:"wrapping-the-rce-with-ricos"},"Wrapping the RCE with Ricos"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-jsx"}),"import { RicosEditor } from 'ricos-editor';\nimport { RichContentEditor } from 'wix-rich-content-editor';\n\nimport { pluginGiphy } from 'wix-rich-content-plugin-giphy';\nimport { pluginImage } from 'wix-rich-content-plugin-image';\nimport { pluginVideo } from 'wix-rich-content-plugin-video';\n\n...\n\nclass App extends Component {\n\n  render() {\n  ...\n    return (\n      <RicosEditor\n        content={initialState}\n        theme={{ palette: site_palette }}\n        locale={'he'}\n        plugins={[pluginVideo(), pluginImage(), pluginGiphy({ giphySdkApiKey: 'secret_key' })]}\n        isMobile={mobile}\n      >\n        <RichContentEditor placeholder={'Type here!'} />\n      </RicosEditor>\n    );\n  }\n}\n")),Object(r.b)("h3",{id:"wrapping-the-rcv"},"Wrapping the RCV"),Object(r.b)("pre",null,Object(r.b)("code",Object(t.a)({parentName:"pre"},{className:"language-jsx"}),"import { RicosViewer } from 'ricos-viewer';\nimport { RichContentViewer} from 'wix-rich-content-viewer';\n\nimport { pluginGiphy } from 'wix-rich-content-plugin-giphy/dist/module.viewer.cjs';\nimport { pluginImage } from 'wix-rich-content-plugin-image/dist/module.viewer.cjs';\nimport { pluginVideo } from 'wix-rich-content-plugin-video/dist/module.viewer.cjs';\n\n...\n\nclass App extends Component {\n\n  render() {\n  ...\n    return (\n      <RicosViewer\n        content={initialState}\n        locale={'he'}\n        plugins={[pluginVideo(), pluginImage(), pluginGiphy()]}\n        isMobile={mobile}\n      >\n        <RichContentViewer />\n      </RicosViewer>\n    );\n  }\n}\n")),Object(r.b)("h2",{id:"why-ricos-is-good-for-you"},"Why ",Object(r.b)("inlineCode",{parentName:"h2"},"Ricos")," is good for you?"),Object(r.b)("h3",{id:"core-features"},"Core features"),Object(r.b)("h4",{id:"themes-and-site-palette-wiring"},"Themes and site palette wiring"),Object(r.b)("p",null,"TBD"),Object(r.b)("h4",{id:"plugin-configuration"},"Plugin configuration"),Object(r.b)("p",null,"TBD"),Object(r.b)("h4",{id:"rce-mobilestatic-toolbar-handling"},"RCE: Mobile/Static toolbar handling"),Object(r.b)("p",null,"By default, the mobile toolbar is rendered internally if the ",Object(r.b)("inlineCode",{parentName:"p"},"isMobile")," prop is truthy. If ",Object(r.b)("inlineCode",{parentName:"p"},"textToolbarType")," is 'static', the static text toolbar is rendered internally. Both mobile and and static toolbars are rendered above the RCE, unless ",Object(r.b)("inlineCode",{parentName:"p"},"toolbarContainerElement")," prop is passed."),Object(r.b)("h4",{id:"modals-and-fullscreen"},"Modals and Fullscreen"),Object(r.b)("h5",{id:"rcv"},"RCV"),Object(r.b)("p",null,"Expand for image and gallery is handled internally by default. If ",Object(r.b)("inlineCode",{parentName:"p"},"onExpand")," config supply for image and gallery plugins will override this behavior."),Object(r.b)("h5",{id:"rce"},"RCE"),Object(r.b)("p",null,"If the ",Object(r.b)("inlineCode",{parentName:"p"},"helpers.openModal"),"/",Object(r.b)("inlineCode",{parentName:"p"},"helpers.closeModal")," are undefined, the modal dialogs are handled internally."),Object(r.b)("h4",{id:"rce-editorstate-handling-and-onchange-callback"},"RCE: ",Object(r.b)("inlineCode",{parentName:"h4"},"editorState")," handling and ",Object(r.b)("inlineCode",{parentName:"h4"},"onChange")," callback"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"RicosEditor")," handles ",Object(r.b)("inlineCode",{parentName:"p"},"onChange")," internally, and provides the ",Object(r.b)("inlineCode",{parentName:"p"},"editorState")," to the RCE. This can be overridden by passing ",Object(r.b)("inlineCode",{parentName:"p"},"onChange")," and ",Object(r.b)("inlineCode",{parentName:"p"},"editorState")," directly to the RCE."),Object(r.b)("h4",{id:"translations-and-locale-resource-loading"},"Translations and locale resource loading"),Object(r.b)("p",null,"For any locale, the appropriate translation resource is loaded internally when provided with the ",Object(r.b)("inlineCode",{parentName:"p"},"locale")," prop."),Object(r.b)("h4",{id:"types"},"Types"),Object(r.b)("p",null,"It has Typescript support!"),Object(r.b)("p",null,Object(r.b)("a",Object(t.a)({parentName:"p"},{href:"../ricos-api"}),"API Reference Here")))}p.isMDXComponent=!0}}]);